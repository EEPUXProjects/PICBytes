

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jul 30 10:59:36 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Generated 06/04/2022 GMT
    17                           ; 
    18                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F45K20 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     _TRISD	set	3989
    51   000000                     _TRISC	set	3988
    52   000000                     _TRISB	set	3987
    53   000000                     _LATC	set	3979
    54   000000                     _LATB	set	3978
    55   000000                     _WPUB	set	3964
    56   000000                     _ANSEL	set	3966
    57   000000                     _LATA	set	3977
    58   000000                     _LATD	set	3980
    59   000000                     _LATE	set	3981
    60   000000                     _OSCTUNE	set	3995
    61   000000                     _OSCCON	set	4051
    62   000000                     _INTCON2bits	set	4081
    63   000000                     _TRISA	set	3986
    64   000000                     _TRISE	set	3990
    65   000000                     _PORTBbits	set	3969
    66   000000                     _ANSELH	set	3967
    67   000000                     _INTCONbits	set	4082
    68                           
    69                           ; #config settings
    70                           
    71                           	psect	cinit
    72   007F38                     __pcinit:
    73                           	callstack 0
    74   007F38                     start_initialization:
    75                           	callstack 0
    76   007F38                     __initialization:
    77                           	callstack 0
    78   007F38                     end_of_initialization:
    79                           	callstack 0
    80   007F38                     __end_of__initialization:
    81                           	callstack 0
    82   007F38  0100               	movlb	0
    83   007F3A  EFC2  F03F         	goto	_main	;jump to C main() function
    84                           
    85                           	psect	cstackCOMRAM
    86   000001                     __pcstackCOMRAM:
    87                           	callstack 0
    88   000001                     ??_main:
    89                           
    90                           ; 1 bytes @ 0x0
    91   000001                     	ds	2
    92                           
    93 ;;
    94 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    95 ;;
    96 ;; *************** function _main *****************
    97 ;; Defined at:
    98 ;;		line 12 in file "main.c"
    99 ;; Parameters:    Size  Location     Type
   100 ;;		None
   101 ;; Auto vars:     Size  Location     Type
   102 ;;		None
   103 ;; Return value:  Size  Location     Type
   104 ;;                  1    wreg      void 
   105 ;; Registers used:
   106 ;;		wreg, status,2, status,0, cstack
   107 ;; Tracked objects:
   108 ;;		On entry : 0/0
   109 ;;		On exit  : 0/0
   110 ;;		Unchanged: 0/0
   111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   112 ;;      Params:         0       0       0       0       0       0       0
   113 ;;      Locals:         0       0       0       0       0       0       0
   114 ;;      Temps:          2       0       0       0       0       0       0
   115 ;;      Totals:         2       0       0       0       0       0       0
   116 ;;Total ram usage:        2 bytes
   117 ;; Hardware stack levels required when called: 2
   118 ;; This function calls:
   119 ;;		_SYSTEM_Initialize
   120 ;; This function is called by:
   121 ;;		Startup code after reset
   122 ;; This function uses a non-reentrant model
   123 ;;
   124                           
   125                           	psect	text0
   126   007F84                     __ptext0:
   127                           	callstack 0
   128   007F84                     _main:
   129                           	callstack 29
   130   007F84                     
   131                           ;main.c: 14: SYSTEM_Initialize();
   132   007F84  ECA4  F03F         	call	_SYSTEM_Initialize	;wreg free
   133   007F88                     
   134                           ;main.c: 16: LATC=0x00;
   135   007F88  0E00               	movlw	0
   136   007F8A  6E8B               	movwf	139,c	;volatile
   137   007F8C                     l845:
   138                           
   139                           ;main.c: 18: {;main.c: 19: if(PORTBbits.RB0 == 0)
   140   007F8C  B081               	btfsc	129,0,c	;volatile
   141   007F8E  EFCB  F03F         	goto	u11
   142   007F92  EFCD  F03F         	goto	u10
   143   007F96                     u11:
   144   007F96  EFE2  F03F         	goto	l66
   145   007F9A                     u10:
   146   007F9A                     
   147                           ;main.c: 20: {;main.c: 21: _delay((unsigned long)((250)*(20000000/4000.0)));
   148   007F9A  0E07               	movlw	7
   149   007F9C  6E02               	movwf	(??_main+1)^0,c
   150   007F9E  0E58               	movlw	88
   151   007FA0  6E01               	movwf	??_main^0,c
   152   007FA2  0E5A               	movlw	90
   153   007FA4                     u57:
   154   007FA4  2EE8               	decfsz	wreg,f,c
   155   007FA6  D7FE               	bra	u57
   156   007FA8  2E01               	decfsz	??_main^0,f,c
   157   007FAA  D7FC               	bra	u57
   158   007FAC  2E02               	decfsz	(??_main+1)^0,f,c
   159   007FAE  D7FA               	bra	u57
   160   007FB0                     l67:
   161   007FB0  A081               	btfss	129,0,c	;volatile
   162   007FB2  EFDD  F03F         	goto	u21
   163   007FB6  EFDF  F03F         	goto	u20
   164   007FBA                     u21:
   165   007FBA  EFD8  F03F         	goto	l67
   166   007FBE                     u20:
   167   007FBE                     
   168                           ;main.c: 23: LATC++;
   169   007FBE  2A8B               	incf	139,f,c	;volatile
   170                           
   171                           ;main.c: 24: }
   172   007FC0  EFC6  F03F         	goto	l845
   173   007FC4                     l66:
   174                           
   175                           ;main.c: 25: else if (PORTBbits.RB0 == 1)
   176   007FC4  A081               	btfss	129,0,c	;volatile
   177   007FC6  EFE7  F03F         	goto	u31
   178   007FCA  EFE9  F03F         	goto	u30
   179   007FCE                     u31:
   180   007FCE  EFC6  F03F         	goto	l845
   181   007FD2                     u30:
   182   007FD2                     
   183                           ;main.c: 26: {;main.c: 27: _delay((unsigned long)((250)*(20000000/4000.0)));
   184   007FD2  0E07               	movlw	7
   185   007FD4  6E02               	movwf	(??_main+1)^0,c
   186   007FD6  0E58               	movlw	88
   187   007FD8  6E01               	movwf	??_main^0,c
   188   007FDA  0E5A               	movlw	90
   189   007FDC                     u67:
   190   007FDC  2EE8               	decfsz	wreg,f,c
   191   007FDE  D7FE               	bra	u67
   192   007FE0  2E01               	decfsz	??_main^0,f,c
   193   007FE2  D7FC               	bra	u67
   194   007FE4  2E02               	decfsz	(??_main+1)^0,f,c
   195   007FE6  D7FA               	bra	u67
   196   007FE8                     l72:
   197   007FE8  B081               	btfsc	129,0,c	;volatile
   198   007FEA  EFF9  F03F         	goto	u41
   199   007FEE  EFFB  F03F         	goto	u40
   200   007FF2                     u41:
   201   007FF2  EFF4  F03F         	goto	l72
   202   007FF6                     u40:
   203   007FF6                     
   204                           ;main.c: 29: __nop();
   205   007FF6  F000               	nop	
   206   007FF8  EFC6  F03F         	goto	l845
   207   007FFC  EF00  F000         	goto	start
   208   008000                     __end_of_main:
   209                           	callstack 0
   210                           
   211 ;; *************** function _SYSTEM_Initialize *****************
   212 ;; Defined at:
   213 ;;		line 50 in file "mcc_generated_files/mcc.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;		None
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		wreg, status,2, cstack
   222 ;; Tracked objects:
   223 ;;		On entry : 0/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   227 ;;      Params:         0       0       0       0       0       0       0
   228 ;;      Locals:         0       0       0       0       0       0       0
   229 ;;      Temps:          0       0       0       0       0       0       0
   230 ;;      Totals:         0       0       0       0       0       0       0
   231 ;;Total ram usage:        0 bytes
   232 ;; Hardware stack levels used: 1
   233 ;; Hardware stack levels required when called: 1
   234 ;; This function calls:
   235 ;;		_OSCILLATOR_Initialize
   236 ;;		_PIN_MANAGER_Initialize
   237 ;; This function is called by:
   238 ;;		_main
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242                           	psect	text1
   243   007F48                     __ptext1:
   244                           	callstack 0
   245   007F48                     _SYSTEM_Initialize:
   246                           	callstack 29
   247   007F48                     
   248                           ;mcc.c: 53: PIN_MANAGER_Initialize();
   249   007F48  ECA9  F03F         	call	_PIN_MANAGER_Initialize	;wreg free
   250                           
   251                           ;mcc.c: 54: OSCILLATOR_Initialize();
   252   007F4C  EC9F  F03F         	call	_OSCILLATOR_Initialize	;wreg free
   253   007F50  0012               	return		;funcret
   254   007F52                     __end_of_SYSTEM_Initialize:
   255                           	callstack 0
   256                           
   257 ;; *************** function _PIN_MANAGER_Initialize *****************
   258 ;; Defined at:
   259 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, status,2
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   273 ;;      Params:         0       0       0       0       0       0       0
   274 ;;      Locals:         0       0       0       0       0       0       0
   275 ;;      Temps:          0       0       0       0       0       0       0
   276 ;;      Totals:         0       0       0       0       0       0       0
   277 ;;Total ram usage:        0 bytes
   278 ;; Hardware stack levels used: 1
   279 ;; This function calls:
   280 ;;		Nothing
   281 ;; This function is called by:
   282 ;;		_SYSTEM_Initialize
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           	psect	text2
   287   007F52                     __ptext2:
   288                           	callstack 0
   289   007F52                     _PIN_MANAGER_Initialize:
   290                           	callstack 29
   291   007F52                     
   292                           ;pin_manager.c: 60: LATE = 0x00;
   293   007F52  0E00               	movlw	0
   294   007F54  6E8D               	movwf	141,c	;volatile
   295                           
   296                           ;pin_manager.c: 61: LATD = 0x00;
   297   007F56  0E00               	movlw	0
   298   007F58  6E8C               	movwf	140,c	;volatile
   299                           
   300                           ;pin_manager.c: 62: LATA = 0x00;
   301   007F5A  0E00               	movlw	0
   302   007F5C  6E89               	movwf	137,c	;volatile
   303                           
   304                           ;pin_manager.c: 63: LATB = 0x00;
   305   007F5E  0E00               	movlw	0
   306   007F60  6E8A               	movwf	138,c	;volatile
   307                           
   308                           ;pin_manager.c: 64: LATC = 0x00;
   309   007F62  0E00               	movlw	0
   310   007F64  6E8B               	movwf	139,c	;volatile
   311                           
   312                           ;pin_manager.c: 69: TRISE = 0x07;
   313   007F66  0E07               	movlw	7
   314   007F68  6E96               	movwf	150,c	;volatile
   315   007F6A                     
   316                           ;pin_manager.c: 70: TRISA = 0xFF;
   317   007F6A  6892               	setf	146,c	;volatile
   318   007F6C                     
   319                           ;pin_manager.c: 71: TRISB = 0xFF;
   320   007F6C  6893               	setf	147,c	;volatile
   321                           
   322                           ;pin_manager.c: 72: TRISC = 0x00;
   323   007F6E  0E00               	movlw	0
   324   007F70  6E94               	movwf	148,c	;volatile
   325                           
   326                           ;pin_manager.c: 73: TRISD = 0x00;
   327   007F72  0E00               	movlw	0
   328   007F74  6E95               	movwf	149,c	;volatile
   329   007F76                     
   330                           ;pin_manager.c: 78: ANSEL = 0xFF;
   331   007F76  687E               	setf	126,c	;volatile
   332                           
   333                           ;pin_manager.c: 79: ANSELH = 0x0F;
   334   007F78  0E0F               	movlw	15
   335   007F7A  6E7F               	movwf	127,c	;volatile
   336                           
   337                           ;pin_manager.c: 84: WPUB = 0x80;
   338   007F7C  0E80               	movlw	128
   339   007F7E  6E7C               	movwf	124,c	;volatile
   340   007F80                     
   341                           ;pin_manager.c: 85: INTCON2bits.nRBPU = 0;
   342   007F80  9EF1               	bcf	241,7,c	;volatile
   343   007F82  0012               	return		;funcret
   344   007F84                     __end_of_PIN_MANAGER_Initialize:
   345                           	callstack 0
   346                           
   347 ;; *************** function _OSCILLATOR_Initialize *****************
   348 ;; Defined at:
   349 ;;		line 57 in file "mcc_generated_files/mcc.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;		None
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, status,2
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   363 ;;      Params:         0       0       0       0       0       0       0
   364 ;;      Locals:         0       0       0       0       0       0       0
   365 ;;      Temps:          0       0       0       0       0       0       0
   366 ;;      Totals:         0       0       0       0       0       0       0
   367 ;;Total ram usage:        0 bytes
   368 ;; Hardware stack levels used: 1
   369 ;; This function calls:
   370 ;;		Nothing
   371 ;; This function is called by:
   372 ;;		_SYSTEM_Initialize
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text3
   377   007F3E                     __ptext3:
   378                           	callstack 0
   379   007F3E                     _OSCILLATOR_Initialize:
   380                           	callstack 29
   381   007F3E                     
   382                           ;mcc.c: 60: OSCCON = 0x60;
   383   007F3E  0E60               	movlw	96
   384   007F40  6ED3               	movwf	211,c	;volatile
   385                           
   386                           ;mcc.c: 62: OSCTUNE = 0x00;
   387   007F42  0E00               	movlw	0
   388   007F44  6E9B               	movwf	155,c	;volatile
   389   007F46  0012               	return		;funcret
   390   007F48                     __end_of_OSCILLATOR_Initialize:
   391                           	callstack 0
   392   000000                     
   393                           	psect	rparam
   394   000000                     
   395                           	psect	idloc
   396                           
   397                           ;Config register IDLOC0 @ 0x200000
   398                           ;	unspecified, using default values
   399   200000                     	org	2097152
   400   200000  FF                 	db	255
   401                           
   402                           ;Config register IDLOC1 @ 0x200001
   403                           ;	unspecified, using default values
   404   200001                     	org	2097153
   405   200001  FF                 	db	255
   406                           
   407                           ;Config register IDLOC2 @ 0x200002
   408                           ;	unspecified, using default values
   409   200002                     	org	2097154
   410   200002  FF                 	db	255
   411                           
   412                           ;Config register IDLOC3 @ 0x200003
   413                           ;	unspecified, using default values
   414   200003                     	org	2097155
   415   200003  FF                 	db	255
   416                           
   417                           ;Config register IDLOC4 @ 0x200004
   418                           ;	unspecified, using default values
   419   200004                     	org	2097156
   420   200004  FF                 	db	255
   421                           
   422                           ;Config register IDLOC5 @ 0x200005
   423                           ;	unspecified, using default values
   424   200005                     	org	2097157
   425   200005  FF                 	db	255
   426                           
   427                           ;Config register IDLOC6 @ 0x200006
   428                           ;	unspecified, using default values
   429   200006                     	org	2097158
   430   200006  FF                 	db	255
   431                           
   432                           ;Config register IDLOC7 @ 0x200007
   433                           ;	unspecified, using default values
   434   200007                     	org	2097159
   435   200007  FF                 	db	255
   436                           
   437                           	psect	config
   438                           
   439                           ; Padding undefined space
   440   300000                     	org	3145728
   441   300000  FF                 	db	255
   442                           
   443                           ;Config register CONFIG1H @ 0x300001
   444                           ;	Oscillator Selection bits
   445                           ;	FOSC = HS, HS oscillator
   446                           ;	Fail-Safe Clock Monitor Enable bit
   447                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   448                           ;	Internal/External Oscillator Switchover bit
   449                           ;	IESO = OFF, Oscillator Switchover mode disabled
   450   300001                     	org	3145729
   451   300001  02                 	db	2
   452                           
   453                           ;Config register CONFIG2L @ 0x300002
   454                           ;	Power-up Timer Enable bit
   455                           ;	PWRT = OFF, PWRT disabled
   456                           ;	Brown-out Reset Enable bits
   457                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   458                           ;	Brown Out Reset Voltage bits
   459                           ;	BORV = 18, VBOR set to 1.8 V nominal
   460   300002                     	org	3145730
   461   300002  1F                 	db	31
   462                           
   463                           ;Config register CONFIG2H @ 0x300003
   464                           ;	Watchdog Timer Enable bit
   465                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   466                           ;	Watchdog Timer Postscale Select bits
   467                           ;	WDTPS = 32768, 1:32768
   468   300003                     	org	3145731
   469   300003  1E                 	db	30
   470                           
   471                           ; Padding undefined space
   472   300004                     	org	3145732
   473   300004  FF                 	db	255
   474                           
   475                           ;Config register CONFIG3H @ 0x300005
   476                           ;	CCP2 MUX bit
   477                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   478                           ;	PORTB A/D Enable bit
   479                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   480                           ;	Low-Power Timer1 Oscillator Enable bit
   481                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   482                           ;	HFINTOSC Fast Start-up
   483                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   484                           ;	MCLR Pin Enable bit
   485                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   486   300005                     	org	3145733
   487   300005  8B                 	db	139
   488                           
   489                           ;Config register CONFIG4L @ 0x300006
   490                           ;	Stack Full/Underflow Reset Enable bit
   491                           ;	STVREN = ON, Stack full/underflow will cause Reset
   492                           ;	Single-Supply ICSP Enable bit
   493                           ;	LVP = OFF, Single-Supply ICSP disabled
   494                           ;	Extended Instruction Set Enable bit
   495                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   496                           ;	Background Debugger Enable bit
   497                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
   498   300006                     	org	3145734
   499   300006  81                 	db	129
   500                           
   501                           ; Padding undefined space
   502   300007                     	org	3145735
   503   300007  FF                 	db	255
   504                           
   505                           ;Config register CONFIG5L @ 0x300008
   506                           ;	Code Protection Block 0
   507                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   508                           ;	Code Protection Block 1
   509                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   510                           ;	Code Protection Block 2
   511                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   512                           ;	Code Protection Block 3
   513                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   514   300008                     	org	3145736
   515   300008  0F                 	db	15
   516                           
   517                           ;Config register CONFIG5H @ 0x300009
   518                           ;	Boot Block Code Protection bit
   519                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   520                           ;	Data EEPROM Code Protection bit
   521                           ;	CPD = OFF, Data EEPROM not code-protected
   522   300009                     	org	3145737
   523   300009  C0                 	db	192
   524                           
   525                           ;Config register CONFIG6L @ 0x30000A
   526                           ;	Write Protection Block 0
   527                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   528                           ;	Write Protection Block 1
   529                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   530                           ;	Write Protection Block 2
   531                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   532                           ;	Write Protection Block 3
   533                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   534   30000A                     	org	3145738
   535   30000A  0F                 	db	15
   536                           
   537                           ;Config register CONFIG6H @ 0x30000B
   538                           ;	Configuration Register Write Protection bit
   539                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   540                           ;	Boot Block Write Protection bit
   541                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   542                           ;	Data EEPROM Write Protection bit
   543                           ;	WRTD = OFF, Data EEPROM not write-protected
   544   30000B                     	org	3145739
   545   30000B  E0                 	db	224
   546                           
   547                           ;Config register CONFIG7L @ 0x30000C
   548                           ;	Table Read Protection Block 0
   549                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   550                           ;	Table Read Protection Block 1
   551                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   552                           ;	Table Read Protection Block 2
   553                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   554                           ;	Table Read Protection Block 3
   555                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   556   30000C                     	org	3145740
   557   30000C  0F                 	db	15
   558                           
   559                           ;Config register CONFIG7H @ 0x30000D
   560                           ;	Boot Block Table Read Protection bit
   561                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   562   30000D                     	org	3145741
   563   30000D  40                 	db	64
   564                           tosu	equ	0xFFF
   565                           tosh	equ	0xFFE
   566                           tosl	equ	0xFFD
   567                           stkptr	equ	0xFFC
   568                           pclatu	equ	0xFFB
   569                           pclath	equ	0xFFA
   570                           pcl	equ	0xFF9
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           prodh	equ	0xFF4
   576                           prodl	equ	0xFF3
   577                           indf0	equ	0xFEF
   578                           postinc0	equ	0xFEE
   579                           postdec0	equ	0xFED
   580                           preinc0	equ	0xFEC
   581                           plusw0	equ	0xFEB
   582                           fsr0h	equ	0xFEA
   583                           fsr0l	equ	0xFE9
   584                           wreg	equ	0xFE8
   585                           indf1	equ	0xFE7
   586                           postinc1	equ	0xFE6
   587                           postdec1	equ	0xFE5
   588                           preinc1	equ	0xFE4
   589                           plusw1	equ	0xFE3
   590                           fsr1h	equ	0xFE2
   591                           fsr1l	equ	0xFE1
   592                           bsr	equ	0xFE0
   593                           indf2	equ	0xFDF
   594                           postinc2	equ	0xFDE
   595                           postdec2	equ	0xFDD
   596                           preinc2	equ	0xFDC
   597                           plusw2	equ	0xFDB
   598                           fsr2h	equ	0xFDA
   599                           fsr2l	equ	0xFD9
   600                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       2       1        2.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhh          D      0       0      16        0.0%
BITBIGSFRhl         1D      0       0      17        0.0%
BITBIGSFRlh         37      0       0      18        0.0%
BITBIGSFRllhh        4      0       0      19        0.0%
BITBIGSFRllhll       4      0       0      20        0.0%
BITBIGSFRllllhh      7      0       0      21        0.0%
BITBIGSFRllllhl      1      0       0      22        0.0%
BITBIGSFRlllllh      1      0       0      23        0.0%
BITBIGSFRllllll     1C      0       0      24        0.0%
ABS                  0      0       0      25        0.0%
BIGRAM             5FF      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jul 30 10:59:36 2023

                            l11 7F50                              l14 7F46                              l47 7F82  
                            l72 7FE8                              l74 7FF6                              l66 7FC4  
                            l67 7FB0                              u10 7F9A                              u11 7F96  
                            u20 7FBE                              u21 7FBA                              u30 7FD2  
                            u31 7FCE                              u40 7FF6                              u41 7FF2  
                            u57 7FA4                              u67 7FDC                             l831 7F76  
                           l833 7F80                             l825 7F52                             l841 7F84  
                           l835 7F3E                             l827 7F6A                             l851 7FD2  
                           l843 7F88                             l829 7F6C                             l837 7F48  
                           l845 7F8C                             l847 7F9A                             l849 7FBE  
                           wreg 0FE8                            _LATA 0F89                            _LATB 0F8A  
                          _LATC 0F8B                            _LATD 0F8C                            _LATE 0F8D  
                          _WPUB 0F7C                            _main 7F84                            start 0000  
                  ___param_bank 0000   __end_of_OSCILLATOR_Initialize 7F48                           ?_main 0001  
                         _ANSEL 0F7E                           _TRISA 0F92                           _TRISB 0F93  
                         _TRISC 0F94                           _TRISD 0F95                           _TRISE 0F96  
               __initialization 7F38                    __end_of_main 8000                          ??_main 0001  
                 __activetblptr 0000                          _ANSELH 0F7F                          _OSCCON 0FD3  
                        isa$std 0001               _SYSTEM_Initialize 7F48                      __accesstop 0060  
       __end_of__initialization 7F38              ?_SYSTEM_Initialize 0001                   ___rparam_used 0001  
                __pcstackCOMRAM 0001             ??_SYSTEM_Initialize 0001       __end_of_SYSTEM_Initialize 7F52  
                       _OSCTUNE 0F9B                         __Hparam 0000                         __Lparam 0000  
                       __pcinit 7F38                         __ramtop 0600                         __ptext0 7F84  
                       __ptext1 7F48                         __ptext2 7F52                         __ptext3 7F3E  
         _OSCILLATOR_Initialize 7F3E        ??_PIN_MANAGER_Initialize 0001            end_of_initialization 7F38  
                     _PORTBbits 0F81          ?_OSCILLATOR_Initialize 0001             start_initialization 7F38  
        _PIN_MANAGER_Initialize 7F52                     _INTCON2bits 0FF1                        __Hrparam 0000  
                      __Lrparam 0000         ??_OSCILLATOR_Initialize 0001                        isa$xinst 0000  
                    _INTCONbits 0FF2         ?_PIN_MANAGER_Initialize 0001  __end_of_PIN_MANAGER_Initialize 7F84  
