

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Jan 28 17:23:52 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F45K20 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
    61  0000                     
    62 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
    63  0000                     
    64 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
    65  0000                     
    66                           	psect	nvCOMRAM
    67  000001                     __pnvCOMRAM:
    68                           	callstack 0
    69  000001                     _EUSART_ErrorHandler:
    70                           	callstack 0
    71  000001                     	ds	2
    72  000003                     _EUSART_OverrunErrorHandler:
    73                           	callstack 0
    74  000003                     	ds	2
    75  000005                     _EUSART_FramingErrorHandler:
    76                           	callstack 0
    77  000005                     	ds	2
    78  0000                     _INTCONbits	set	4082
    79  0000                     _INTCON2bits	set	4081
    80  0000                     _WPUB	set	3964
    81  0000                     _ANSELH	set	3967
    82  0000                     _ANSEL	set	3966
    83  0000                     _TRISD	set	3989
    84  0000                     _TRISC	set	3988
    85  0000                     _TRISB	set	3987
    86  0000                     _TRISA	set	3986
    87  0000                     _TRISE	set	3990
    88  0000                     _LATC	set	3979
    89  0000                     _LATB	set	3978
    90  0000                     _LATA	set	3977
    91  0000                     _LATD	set	3980
    92  0000                     _LATE	set	3981
    93  0000                     _TXREG	set	4013
    94  0000                     _RCREG	set	4014
    95  0000                     _RCSTAbits	set	4011
    96  0000                     _TXSTAbits	set	4012
    97  0000                     _PIR1bits	set	3998
    98  0000                     _SPBRGH	set	4016
    99  0000                     _SPBRG	set	4015
   100  0000                     _TXSTA	set	4012
   101  0000                     _RCSTA	set	4011
   102  0000                     _BAUDCON	set	4024
   103  0000                     _OSCTUNE	set	3995
   104  0000                     _OSCCON	set	4051
   105                           
   106                           ; #config settings
   107                           
   108                           	psect	cinit
   109  007EF0                     __pcinit:
   110                           	callstack 0
   111  007EF0                     start_initialization:
   112                           	callstack 0
   113  007EF0                     __initialization:
   114                           	callstack 0
   115                           
   116                           ; Clear objects allocated to COMRAM (1 bytes)
   117  007EF0  6A0A               	clrf	__pbssCOMRAM& (0+255),c
   118  007EF2                     end_of_initialization:
   119                           	callstack 0
   120  007EF2                     __end_of__initialization:
   121                           	callstack 0
   122  007EF2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   123  007EF4  6EF8               	movwf	tblptru,c
   124  007EF6  0100               	movlb	0
   125  007EF8  EFC6  F03F         	goto	_main	;jump to C main() function
   126                           
   127                           	psect	bssCOMRAM
   128  00000A                     __pbssCOMRAM:
   129                           	callstack 0
   130  00000A                     _eusartRxLastError:
   131                           	callstack 0
   132  00000A                     	ds	1
   133                           
   134                           	psect	cstackCOMRAM
   135  000007                     __pcstackCOMRAM:
   136                           	callstack 0
   137  000007                     EUSART_Write@txData:
   138                           	callstack 0
   139  000007                     EUSART_SetFramingErrorHandler@interruptHandler:
   140                           	callstack 0
   141  000007                     EUSART_SetOverrunErrorHandler@interruptHandler:
   142                           	callstack 0
   143  000007                     EUSART_SetErrorHandler@interruptHandler:
   144                           	callstack 0
   145                           
   146                           ; 2 bytes @ 0x0
   147  000007                     	ds	2
   148  000009                     ??_main:
   149                           
   150                           ; 1 bytes @ 0x2
   151  000009                     	ds	1
   152                           
   153 ;;
   154 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   155 ;;
   156 ;; *************** function _main *****************
   157 ;; Defined at:
   158 ;;		line 10 in file "main.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;		None
   163 ;; Return value:  Size  Location     Type
   164 ;;                  1    wreg      void 
   165 ;; Registers used:
   166 ;;		wreg, status,2, status,0, cstack
   167 ;; Tracked objects:
   168 ;;		On entry : 0/0
   169 ;;		On exit  : 0/0
   170 ;;		Unchanged: 0/0
   171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   172 ;;      Params:         0       0       0       0       0       0       0
   173 ;;      Locals:         0       0       0       0       0       0       0
   174 ;;      Temps:          1       0       0       0       0       0       0
   175 ;;      Totals:         1       0       0       0       0       0       0
   176 ;;Total ram usage:        1 bytes
   177 ;; Hardware stack levels required when called:    3
   178 ;; This function calls:
   179 ;;		_EUSART_Read
   180 ;;		_EUSART_Write
   181 ;;		_EUSART_is_rx_ready
   182 ;;		_SYSTEM_Initialize
   183 ;; This function is called by:
   184 ;;		Startup code after reset
   185 ;; This function uses a non-reentrant model
   186 ;;
   187                           
   188                           	psect	text0
   189  007F8C                     __ptext0:
   190                           	callstack 0
   191  007F8C                     _main:
   192                           	callstack 28
   193  007F8C                     
   194                           ;main.c: 12:     SYSTEM_Initialize();
   195  007F8C  EC7E  F03F         	call	_SYSTEM_Initialize	;wreg free
   196  007F90                     l937:
   197  007F90  EC85  F03F         	call	_EUSART_is_rx_ready	;wreg free
   198  007F94  0900               	iorlw	0
   199  007F96  A4D8               	btfss	status,2,c
   200  007F98  EFD0  F03F         	goto	u81
   201  007F9C  EFD2  F03F         	goto	u80
   202  007FA0                     u81:
   203  007FA0  EFC8  F03F         	goto	l937
   204  007FA4                     u80:
   205  007FA4                     
   206                           ;main.c: 16:     EUSART_Write(EUSART_Read());
   207  007FA4  EC9A  F03F         	call	_EUSART_Read	;wreg free
   208  007FA8  EC8F  F03F         	call	_EUSART_Write
   209  007FAC                     
   210                           ;main.c: 17:     _delay((unsigned long)((50)*(8000000/4000.0)));
   211  007FAC  0E82               	movlw	130
   212  007FAE  6E09               	movwf	??_main^0,c
   213  007FB0  0EDE               	movlw	222
   214  007FB2                     u97:
   215  007FB2  2EE8               	decfsz	wreg,f,c
   216  007FB4  D7FE               	bra	u97
   217  007FB6  2E09               	decfsz	??_main^0,f,c
   218  007FB8  D7FC               	bra	u97
   219  007FBA  EFC8  F03F         	goto	l937
   220  007FBE  EF00  F000         	goto	start
   221  007FC2                     __end_of_main:
   222                           	callstack 0
   223                           
   224 ;; *************** function _SYSTEM_Initialize *****************
   225 ;; Defined at:
   226 ;;		line 50 in file "mcc_generated_files/mcc.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;		None
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		wreg, status,2, status,0, cstack
   235 ;; Tracked objects:
   236 ;;		On entry : 0/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   240 ;;      Params:         0       0       0       0       0       0       0
   241 ;;      Locals:         0       0       0       0       0       0       0
   242 ;;      Temps:          0       0       0       0       0       0       0
   243 ;;      Totals:         0       0       0       0       0       0       0
   244 ;;Total ram usage:        0 bytes
   245 ;; Hardware stack levels used:    1
   246 ;; Hardware stack levels required when called:    2
   247 ;; This function calls:
   248 ;;		_EUSART_Initialize
   249 ;;		_OSCILLATOR_Initialize
   250 ;;		_PIN_MANAGER_Initialize
   251 ;; This function is called by:
   252 ;;		_main
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256                           	psect	text1
   257  007EFC                     __ptext1:
   258                           	callstack 0
   259  007EFC                     _SYSTEM_Initialize:
   260                           	callstack 28
   261  007EFC                     
   262                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   263  007EFC  ECAE  F03F         	call	_PIN_MANAGER_Initialize	;wreg free
   264                           
   265                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   266  007F00  EC73  F03F         	call	_OSCILLATOR_Initialize	;wreg free
   267  007F04                     
   268                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
   269  007F04  ECE1  F03F         	call	_EUSART_Initialize	;wreg free
   270  007F08  0012               	return		;funcret
   271  007F0A                     __end_of_SYSTEM_Initialize:
   272                           	callstack 0
   273                           
   274 ;; *************** function _PIN_MANAGER_Initialize *****************
   275 ;; Defined at:
   276 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;		None
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, status,2
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   290 ;;      Params:         0       0       0       0       0       0       0
   291 ;;      Locals:         0       0       0       0       0       0       0
   292 ;;      Temps:          0       0       0       0       0       0       0
   293 ;;      Totals:         0       0       0       0       0       0       0
   294 ;;Total ram usage:        0 bytes
   295 ;; Hardware stack levels used:    1
   296 ;; This function calls:
   297 ;;		Nothing
   298 ;; This function is called by:
   299 ;;		_SYSTEM_Initialize
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           	psect	text2
   304  007F5C                     __ptext2:
   305                           	callstack 0
   306  007F5C                     _PIN_MANAGER_Initialize:
   307                           	callstack 29
   308  007F5C                     
   309                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   310  007F5C  0E00               	movlw	0
   311  007F5E  6E8D               	movwf	141,c	;volatile
   312                           
   313                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   314  007F60  0E00               	movlw	0
   315  007F62  6E8C               	movwf	140,c	;volatile
   316                           
   317                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   318  007F64  0E00               	movlw	0
   319  007F66  6E89               	movwf	137,c	;volatile
   320                           
   321                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   322  007F68  0E00               	movlw	0
   323  007F6A  6E8A               	movwf	138,c	;volatile
   324                           
   325                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   326  007F6C  0E00               	movlw	0
   327  007F6E  6E8B               	movwf	139,c	;volatile
   328                           
   329                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   330  007F70  0E07               	movlw	7
   331  007F72  6E96               	movwf	150,c	;volatile
   332  007F74                     
   333                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
   334  007F74  6892               	setf	146,c	;volatile
   335  007F76                     
   336                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
   337  007F76  6893               	setf	147,c	;volatile
   338                           
   339                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
   340  007F78  0EBF               	movlw	191
   341  007F7A  6E94               	movwf	148,c	;volatile
   342  007F7C                     
   343                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
   344  007F7C  6895               	setf	149,c	;volatile
   345  007F7E                     
   346                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
   347  007F7E  687E               	setf	126,c	;volatile
   348                           
   349                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
   350  007F80  0E1F               	movlw	31
   351  007F82  6E7F               	movwf	127,c	;volatile
   352                           
   353                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
   354  007F84  0E00               	movlw	0
   355  007F86  6E7C               	movwf	124,c	;volatile
   356  007F88                     
   357                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
   358  007F88  8EF1               	bsf	241,7,c	;volatile
   359  007F8A  0012               	return		;funcret
   360  007F8C                     __end_of_PIN_MANAGER_Initialize:
   361                           	callstack 0
   362                           
   363 ;; *************** function _OSCILLATOR_Initialize *****************
   364 ;; Defined at:
   365 ;;		line 58 in file "mcc_generated_files/mcc.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg, status,2
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   379 ;;      Params:         0       0       0       0       0       0       0
   380 ;;      Locals:         0       0       0       0       0       0       0
   381 ;;      Temps:          0       0       0       0       0       0       0
   382 ;;      Totals:         0       0       0       0       0       0       0
   383 ;;Total ram usage:        0 bytes
   384 ;; Hardware stack levels used:    1
   385 ;; This function calls:
   386 ;;		Nothing
   387 ;; This function is called by:
   388 ;;		_SYSTEM_Initialize
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	text3
   393  007EE6                     __ptext3:
   394                           	callstack 0
   395  007EE6                     _OSCILLATOR_Initialize:
   396                           	callstack 29
   397  007EE6                     
   398                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x62;
   399  007EE6  0E62               	movlw	98
   400  007EE8  6ED3               	movwf	211,c	;volatile
   401                           
   402                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
   403  007EEA  0E00               	movlw	0
   404  007EEC  6E9B               	movwf	155,c	;volatile
   405  007EEE  0012               	return		;funcret
   406  007EF0                     __end_of_OSCILLATOR_Initialize:
   407                           	callstack 0
   408                           
   409 ;; *************** function _EUSART_Initialize *****************
   410 ;; Defined at:
   411 ;;		line 66 in file "mcc_generated_files/eusart.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg, status,2, status,0, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   425 ;;      Params:         0       0       0       0       0       0       0
   426 ;;      Locals:         0       0       0       0       0       0       0
   427 ;;      Temps:          0       0       0       0       0       0       0
   428 ;;      Totals:         0       0       0       0       0       0       0
   429 ;;Total ram usage:        0 bytes
   430 ;; Hardware stack levels used:    1
   431 ;; Hardware stack levels required when called:    1
   432 ;; This function calls:
   433 ;;		_EUSART_SetErrorHandler
   434 ;;		_EUSART_SetFramingErrorHandler
   435 ;;		_EUSART_SetOverrunErrorHandler
   436 ;; This function is called by:
   437 ;;		_SYSTEM_Initialize
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           	psect	text4
   442  007FC2                     __ptext4:
   443                           	callstack 0
   444  007FC2                     _EUSART_Initialize:
   445                           	callstack 28
   446  007FC2                     
   447                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
   448  007FC2  0E08               	movlw	8
   449  007FC4  6EB8               	movwf	184,c	;volatile
   450                           
   451                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
   452  007FC6  0E90               	movlw	144
   453  007FC8  6EAB               	movwf	171,c	;volatile
   454                           
   455                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
   456  007FCA  0E24               	movlw	36
   457  007FCC  6EAC               	movwf	172,c	;volatile
   458                           
   459                           ;mcc_generated_files/eusart.c: 80:     SPBRG = 0xCF;
   460  007FCE  0ECF               	movlw	207
   461  007FD0  6EAF               	movwf	175,c	;volatile
   462                           
   463                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
   464  007FD2  0E00               	movlw	0
   465  007FD4  6EB0               	movwf	176,c	;volatile
   466  007FD6                     
   467                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
   468  007FD6  0E00               	movlw	0
   469  007FD8  6E07               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
   470  007FDA  0E00               	movlw	0
   471  007FDC  6E08               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
   472  007FDE  EC69  F03F         	call	_EUSART_SetFramingErrorHandler	;wreg free
   473  007FE2                     
   474                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
   475  007FE2  0E00               	movlw	0
   476  007FE4  6E07               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
   477  007FE6  0E00               	movlw	0
   478  007FE8  6E08               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
   479  007FEA  EC6E  F03F         	call	_EUSART_SetOverrunErrorHandler	;wreg free
   480  007FEE                     
   481                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
   482  007FEE  0E00               	movlw	0
   483  007FF0  6E07               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
   484  007FF2  0E00               	movlw	0
   485  007FF4  6E08               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
   486  007FF6  EC64  F03F         	call	_EUSART_SetErrorHandler	;wreg free
   487  007FFA                     
   488                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
   489  007FFA  0E00               	movlw	0
   490  007FFC  6E0A               	movwf	_eusartRxLastError^0,c	;volatile
   491  007FFE  0012               	return		;funcret
   492  008000                     __end_of_EUSART_Initialize:
   493                           	callstack 0
   494                           
   495 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
   496 ;; Defined at:
   497 ;;		line 161 in file "mcc_generated_files/eusart.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   500 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   512 ;;      Params:         2       0       0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0       0       0
   515 ;;      Totals:         2       0       0       0       0       0       0
   516 ;;Total ram usage:        2 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; This function calls:
   519 ;;		Nothing
   520 ;; This function is called by:
   521 ;;		_EUSART_Initialize
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           	psect	text5
   526  007EDC                     __ptext5:
   527                           	callstack 0
   528  007EDC                     _EUSART_SetOverrunErrorHandler:
   529                           	callstack 28
   530  007EDC                     
   531                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
   532  007EDC  C007  F003         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
   533  007EE0  C008  F004         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
   534  007EE4  0012               	return		;funcret
   535  007EE6                     __end_of_EUSART_SetOverrunErrorHandler:
   536                           	callstack 0
   537                           
   538 ;; *************** function _EUSART_SetFramingErrorHandler *****************
   539 ;; Defined at:
   540 ;;		line 157 in file "mcc_generated_files/eusart.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   543 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, status,2, status,0
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   555 ;;      Params:         2       0       0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0       0       0
   558 ;;      Totals:         2       0       0       0       0       0       0
   559 ;;Total ram usage:        2 bytes
   560 ;; Hardware stack levels used:    1
   561 ;; This function calls:
   562 ;;		Nothing
   563 ;; This function is called by:
   564 ;;		_EUSART_Initialize
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           	psect	text6
   569  007ED2                     __ptext6:
   570                           	callstack 0
   571  007ED2                     _EUSART_SetFramingErrorHandler:
   572                           	callstack 28
   573  007ED2                     
   574                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
   575  007ED2  C007  F005         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
   576  007ED6  C008  F006         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
   577  007EDA  0012               	return		;funcret
   578  007EDC                     __end_of_EUSART_SetFramingErrorHandler:
   579                           	callstack 0
   580                           
   581 ;; *************** function _EUSART_SetErrorHandler *****************
   582 ;; Defined at:
   583 ;;		line 165 in file "mcc_generated_files/eusart.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   586 ;;		 -> EUSART_DefaultErrorHandler(1), 
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, status,2, status,0
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   598 ;;      Params:         2       0       0       0       0       0       0
   599 ;;      Locals:         0       0       0       0       0       0       0
   600 ;;      Temps:          0       0       0       0       0       0       0
   601 ;;      Totals:         2       0       0       0       0       0       0
   602 ;;Total ram usage:        2 bytes
   603 ;; Hardware stack levels used:    1
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		_EUSART_Initialize
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text7
   612  007EC8                     __ptext7:
   613                           	callstack 0
   614  007EC8                     _EUSART_SetErrorHandler:
   615                           	callstack 28
   616  007EC8                     
   617                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
   618  007EC8  C007  F001         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
   619  007ECC  C008  F002         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
   620  007ED0  0012               	return		;funcret
   621  007ED2                     __end_of_EUSART_SetErrorHandler:
   622                           	callstack 0
   623                           
   624 ;; *************** function _EUSART_is_rx_ready *****************
   625 ;; Defined at:
   626 ;;		line 99 in file "mcc_generated_files/eusart.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      _Bool 
   633 ;; Registers used:
   634 ;;		wreg
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   640 ;;      Params:         0       0       0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0       0       0
   643 ;;      Totals:         0       0       0       0       0       0       0
   644 ;;Total ram usage:        0 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_main
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           	psect	text8
   654  007F0A                     __ptext8:
   655                           	callstack 0
   656  007F0A                     _EUSART_is_rx_ready:
   657                           	callstack 30
   658  007F0A                     
   659                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RC1IF);
   660  007F0A  BA9E               	btfsc	158,5,c	;volatile
   661  007F0C  EF8A  F03F         	goto	u11
   662  007F10  EF8D  F03F         	goto	u10
   663  007F14                     u11:
   664  007F14  0E01               	movlw	1
   665  007F16  EF8E  F03F         	goto	u16
   666  007F1A                     u10:
   667  007F1A  0E00               	movlw	0
   668  007F1C                     u16:
   669  007F1C  0012               	return		;funcret
   670  007F1E                     __end_of_EUSART_is_rx_ready:
   671                           	callstack 0
   672                           
   673 ;; *************** function _EUSART_Write *****************
   674 ;; Defined at:
   675 ;;		line 132 in file "mcc_generated_files/eusart.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  txData          1    wreg     unsigned char 
   678 ;; Auto vars:     Size  Location     Type
   679 ;;  txData          1    0[COMRAM] unsigned char 
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   689 ;;      Params:         0       0       0       0       0       0       0
   690 ;;      Locals:         1       0       0       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0       0       0
   692 ;;      Totals:         1       0       0       0       0       0       0
   693 ;;Total ram usage:        1 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; This function calls:
   696 ;;		Nothing
   697 ;; This function is called by:
   698 ;;		_main
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           	psect	text9
   703  007F1E                     __ptext9:
   704                           	callstack 0
   705  007F1E                     _EUSART_Write:
   706                           	callstack 30
   707                           
   708                           ;incstack = 0
   709                           ;EUSART_Write@txData stored from wreg
   710  007F1E  6E07               	movwf	EUSART_Write@txData^0,c
   711  007F20                     l83:
   712                           
   713                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TX1IF)
   714  007F20  A89E               	btfss	158,4,c	;volatile
   715  007F22  EF95  F03F         	goto	u41
   716  007F26  EF97  F03F         	goto	u40
   717  007F2A                     u41:
   718  007F2A  EF90  F03F         	goto	l83
   719  007F2E                     u40:
   720  007F2E                     
   721                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
   722  007F2E  C007  FFAD         	movff	EUSART_Write@txData,4013	;volatile
   723  007F32  0012               	return		;funcret
   724  007F34                     __end_of_EUSART_Write:
   725                           	callstack 0
   726                           
   727 ;; *************** function _EUSART_Read *****************
   728 ;; Defined at:
   729 ;;		line 113 in file "mcc_generated_files/eusart.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      unsigned char 
   736 ;; Registers used:
   737 ;;		wreg, status,2
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   743 ;;      Params:         0       0       0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0       0       0
   746 ;;      Totals:         0       0       0       0       0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; This function calls:
   750 ;;		Nothing
   751 ;; This function is called by:
   752 ;;		_main
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text10
   757  007F34                     __ptext10:
   758                           	callstack 0
   759  007F34                     _EUSART_Read:
   760                           	callstack 30
   761  007F34                     l76:
   762                           
   763                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RC1IF)
   764  007F34  AA9E               	btfss	158,5,c	;volatile
   765  007F36  EF9F  F03F         	goto	u21
   766  007F3A  EFA1  F03F         	goto	u20
   767  007F3E                     u21:
   768  007F3E  EF9A  F03F         	goto	l76
   769  007F42                     u20:
   770  007F42                     
   771                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
   772  007F42  0E00               	movlw	0
   773  007F44  6E0A               	movwf	_eusartRxLastError^0,c	;volatile
   774  007F46                     
   775                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
   776  007F46  A2AB               	btfss	171,1,c	;volatile
   777  007F48  EFA8  F03F         	goto	u31
   778  007F4C  EFAA  F03F         	goto	u30
   779  007F50                     u31:
   780  007F50  EFAC  F03F         	goto	l883
   781  007F54                     u30:
   782  007F54                     
   783                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
   784  007F54  98AB               	bcf	171,4,c	;volatile
   785                           
   786                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
   787  007F56  88AB               	bsf	171,4,c	;volatile
   788  007F58                     l883:
   789                           
   790                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
   791  007F58  50AE               	movf	174,w,c	;volatile
   792  007F5A  0012               	return		;funcret
   793  007F5C                     __end_of_EUSART_Read:
   794                           	callstack 0
   795  0000                     
   796                           	psect	rparam
   797  0000                     
   798                           	psect	idloc
   799                           
   800                           ;Config register IDLOC0 @ 0x200000
   801                           ;	unspecified, using default values
   802  200000                     	org	2097152
   803  200000  FF                 	db	255
   804                           
   805                           ;Config register IDLOC1 @ 0x200001
   806                           ;	unspecified, using default values
   807  200001                     	org	2097153
   808  200001  FF                 	db	255
   809                           
   810                           ;Config register IDLOC2 @ 0x200002
   811                           ;	unspecified, using default values
   812  200002                     	org	2097154
   813  200002  FF                 	db	255
   814                           
   815                           ;Config register IDLOC3 @ 0x200003
   816                           ;	unspecified, using default values
   817  200003                     	org	2097155
   818  200003  FF                 	db	255
   819                           
   820                           ;Config register IDLOC4 @ 0x200004
   821                           ;	unspecified, using default values
   822  200004                     	org	2097156
   823  200004  FF                 	db	255
   824                           
   825                           ;Config register IDLOC5 @ 0x200005
   826                           ;	unspecified, using default values
   827  200005                     	org	2097157
   828  200005  FF                 	db	255
   829                           
   830                           ;Config register IDLOC6 @ 0x200006
   831                           ;	unspecified, using default values
   832  200006                     	org	2097158
   833  200006  FF                 	db	255
   834                           
   835                           ;Config register IDLOC7 @ 0x200007
   836                           ;	unspecified, using default values
   837  200007                     	org	2097159
   838  200007  FF                 	db	255
   839                           
   840                           	psect	config
   841                           
   842                           ; Padding undefined space
   843  300000                     	org	3145728
   844  300000  FF                 	db	255
   845                           
   846                           ;Config register CONFIG1H @ 0x300001
   847                           ;	Oscillator Selection bits
   848                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   849                           ;	Fail-Safe Clock Monitor Enable bit
   850                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   851                           ;	Internal/External Oscillator Switchover bit
   852                           ;	IESO = OFF, Oscillator Switchover mode disabled
   853  300001                     	org	3145729
   854  300001  08                 	db	8
   855                           
   856                           ;Config register CONFIG2L @ 0x300002
   857                           ;	Power-up Timer Enable bit
   858                           ;	PWRT = OFF, PWRT disabled
   859                           ;	Brown-out Reset Enable bits
   860                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   861                           ;	Brown Out Reset Voltage bits
   862                           ;	BORV = 18, VBOR set to 1.8 V nominal
   863  300002                     	org	3145730
   864  300002  1F                 	db	31
   865                           
   866                           ;Config register CONFIG2H @ 0x300003
   867                           ;	Watchdog Timer Enable bit
   868                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   869                           ;	Watchdog Timer Postscale Select bits
   870                           ;	WDTPS = 32768, 1:32768
   871  300003                     	org	3145731
   872  300003  1E                 	db	30
   873                           
   874                           ; Padding undefined space
   875  300004                     	org	3145732
   876  300004  FF                 	db	255
   877                           
   878                           ;Config register CONFIG3H @ 0x300005
   879                           ;	CCP2 MUX bit
   880                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   881                           ;	PORTB A/D Enable bit
   882                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   883                           ;	Low-Power Timer1 Oscillator Enable bit
   884                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   885                           ;	HFINTOSC Fast Start-up
   886                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   887                           ;	MCLR Pin Enable bit
   888                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   889  300005                     	org	3145733
   890  300005  8B                 	db	139
   891                           
   892                           ;Config register CONFIG4L @ 0x300006
   893                           ;	Stack Full/Underflow Reset Enable bit
   894                           ;	STVREN = ON, Stack full/underflow will cause Reset
   895                           ;	Single-Supply ICSP Enable bit
   896                           ;	LVP = OFF, Single-Supply ICSP disabled
   897                           ;	Extended Instruction Set Enable bit
   898                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   899                           ;	Background Debugger Enable bit
   900                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
   901  300006                     	org	3145734
   902  300006  81                 	db	129
   903                           
   904                           ; Padding undefined space
   905  300007                     	org	3145735
   906  300007  FF                 	db	255
   907                           
   908                           ;Config register CONFIG5L @ 0x300008
   909                           ;	Code Protection Block 0
   910                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   911                           ;	Code Protection Block 1
   912                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   913                           ;	Code Protection Block 2
   914                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   915                           ;	Code Protection Block 3
   916                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   917  300008                     	org	3145736
   918  300008  0F                 	db	15
   919                           
   920                           ;Config register CONFIG5H @ 0x300009
   921                           ;	Boot Block Code Protection bit
   922                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   923                           ;	Data EEPROM Code Protection bit
   924                           ;	CPD = OFF, Data EEPROM not code-protected
   925  300009                     	org	3145737
   926  300009  C0                 	db	192
   927                           
   928                           ;Config register CONFIG6L @ 0x30000A
   929                           ;	Write Protection Block 0
   930                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   931                           ;	Write Protection Block 1
   932                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   933                           ;	Write Protection Block 2
   934                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   935                           ;	Write Protection Block 3
   936                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   937  30000A                     	org	3145738
   938  30000A  0F                 	db	15
   939                           
   940                           ;Config register CONFIG6H @ 0x30000B
   941                           ;	Configuration Register Write Protection bit
   942                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   943                           ;	Boot Block Write Protection bit
   944                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   945                           ;	Data EEPROM Write Protection bit
   946                           ;	WRTD = OFF, Data EEPROM not write-protected
   947  30000B                     	org	3145739
   948  30000B  E0                 	db	224
   949                           
   950                           ;Config register CONFIG7L @ 0x30000C
   951                           ;	Table Read Protection Block 0
   952                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   953                           ;	Table Read Protection Block 1
   954                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   955                           ;	Table Read Protection Block 2
   956                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   957                           ;	Table Read Protection Block 3
   958                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   959  30000C                     	org	3145740
   960  30000C  0F                 	db	15
   961                           
   962                           ;Config register CONFIG7H @ 0x30000D
   963                           ;	Boot Block Table Read Protection bit
   964                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   965  30000D                     	org	3145741
   966  30000D  40                 	db	64
   967                           tosu	equ	0xFFF
   968                           tosh	equ	0xFFE
   969                           tosl	equ	0xFFD
   970                           stkptr	equ	0xFFC
   971                           pclatu	equ	0xFFB
   972                           pclath	equ	0xFFA
   973                           pcl	equ	0xFF9
   974                           tblptru	equ	0xFF8
   975                           tblptrh	equ	0xFF7
   976                           tblptrl	equ	0xFF6
   977                           tablat	equ	0xFF5
   978                           prodh	equ	0xFF4
   979                           prodl	equ	0xFF3
   980                           indf0	equ	0xFEF
   981                           postinc0	equ	0xFEE
   982                           postdec0	equ	0xFED
   983                           preinc0	equ	0xFEC
   984                           plusw0	equ	0xFEB
   985                           fsr0h	equ	0xFEA
   986                           fsr0l	equ	0xFE9
   987                           wreg	equ	0xFE8
   988                           indf1	equ	0xFE7
   989                           postinc1	equ	0xFE6
   990                           postdec1	equ	0xFE5
   991                           preinc1	equ	0xFE4
   992                           plusw1	equ	0xFE3
   993                           fsr1h	equ	0xFE2
   994                           fsr1l	equ	0xFE1
   995                           bsr	equ	0xFE0
   996                           indf2	equ	0xFDF
   997                           postinc2	equ	0xFDE
   998                           postdec2	equ	0xFDD
   999                           preinc2	equ	0xFDC
  1000                           plusw2	equ	0xFDB
  1001                           fsr2h	equ	0xFDA
  1002                           fsr2l	equ	0xFD9
  1003                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     309
                                              2 COMRAM     1     1      0
                        _EUSART_Read
                       _EUSART_Write
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_Write
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      3       A       1       10.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A      15        0.0%
DATA                 0      0       A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Jan 28 17:23:52 2021

                                           l13 7F08                                             l16 7EEE  
                                           l80 7F5A                                             l83 7F20  
                                           l67 7F1C                                             l59 7FFE  
                                           l76 7F34                                             l86 7F32  
                                           l98 7EDA                                             u10 7F1A  
                                           u11 7F14                                             u20 7F42  
                                           u21 7F3E                                             u30 7F54  
                                           u31 7F50                                             u40 7F2E  
                                           u16 7F1C                                             u41 7F2A  
                                           u80 7FA4                                             u81 7FA0  
                                           u97 7FB2                                            l101 7EE4  
                                          l104 7ED0                                            l158 7F8A  
                                          l921 7FC2                                            l915 7ED2  
                                          l923 7FD6                                            l851 7F7E  
                                          l843 7F5C                                            l931 7EFC  
                                          l917 7EDC                                            l925 7FE2  
                                          l853 7F88                                            l845 7F74  
                                          l933 7F04                                            l941 7FAC  
                                          l871 7F0A                                            l919 7EC8  
                                          l927 7FEE                                            l855 7EE6  
                                          l847 7F76                                            l935 7F8C  
                                          l881 7F54                                            l929 7FFA  
                                          l849 7F7C                                            l937 7F90  
                                          l883 7F58                                            l875 7F34  
                                          l939 7FA4                                            l877 7F42  
                                          l879 7F46                                            l887 7F20  
                                          l889 7F2E                 ?_EUSART_SetFramingErrorHandler 0007  
                                          wreg 000FE8                                   ?_EUSART_Read 0007  
                                         _LATA 000F89                                           _LATB 000F8A  
                                         _LATC 000F8B                                           _LATD 000F8C  
                                         _LATE 000F8D                                           _WPUB 000F7C  
                                         _main 7F8C                                           start 0000  
                                 ___param_bank 000000                                  ?_EUSART_Write 0007  
               __size_of_OSCILLATOR_Initialize 000A                  __end_of_OSCILLATOR_Initialize 7EF0  
                                        ?_main 0007                                          _ANSEL 000F7E  
                                        _RCREG 000FAE                                          _RCSTA 000FAB  
                                        _SPBRG 000FAF                                          _TRISA 000F92  
                                        _TRISB 000F93                                          _TRISC 000F94  
                                        _TRISD 000F95                                          _TRISE 000F96  
                                        _TXREG 000FAD                                          _TXSTA 000FAC  
                                        status 000FD8                                __initialization 7EF0  
                                 __end_of_main 7FC2                                 ??_EUSART_Write 0007  
                                       ??_main 0009                                  __activetblptr 000002  
            _EUSART_DefaultFramingErrorHandler 000000                     _EUSART_OverrunErrorHandler 0003  
                                       _ANSELH 000F7F                     __end_of_EUSART_is_rx_ready 7F1E  
                                       _OSCCON 000FD3                                         _SPBRGH 000FB0  
                                       tblptru 000FF8                           __size_of_EUSART_Read 0028  
                            _SYSTEM_Initialize 7EFC                                     __accesstop 0060  
                      __end_of__initialization 7EF2                             ?_SYSTEM_Initialize 0007  
                                ___rparam_used 000001                                 __pcstackCOMRAM 0007  
                          ??_SYSTEM_Initialize 0009                ??_EUSART_SetOverrunErrorHandler 0009  
                    __end_of_SYSTEM_Initialize 7F0A                           __end_of_EUSART_Write 7F34  
                                   __pnvCOMRAM 0001                                        _BAUDCON 000FB8  
                                      _OSCTUNE 000F9B                       ??_EUSART_SetErrorHandler 0009  
                                      __Hparam 0000                                        __Lparam 0000  
                                      __pcinit 7EF0                                        __ramtop 0600  
                                      __ptext0 7F8C                                        __ptext1 7EFC  
                                      __ptext2 7F5C                                        __ptext3 7EE6  
                                      __ptext4 7FC2                                        __ptext5 7EDC  
                                      __ptext6 7ED2                                        __ptext7 7EC8  
                                      __ptext8 7F0A                                        __ptext9 7F1E  
                        _OSCILLATOR_Initialize 7EE6                       ??_PIN_MANAGER_Initialize 0007  
                   __size_of_SYSTEM_Initialize 000E                           end_of_initialization 7EF2  
        __end_of_EUSART_SetOverrunErrorHandler 7EE6         __size_of_EUSART_SetOverrunErrorHandler 000A  
                _EUSART_SetOverrunErrorHandler 7EDC                                  __Lmediumconst 0000  
                            _EUSART_Initialize 7FC2                             ?_EUSART_Initialize 0007  
                                    _RCSTAbits 000FAB                             _EUSART_is_rx_ready 7F0A  
                          ??_EUSART_Initialize 0009                            ?_EUSART_is_rx_ready 0007  
                        __size_of_EUSART_Write 0016                __size_of_EUSART_SetErrorHandler 000A  
                    __end_of_EUSART_Initialize 8000                           ??_EUSART_is_rx_ready 0007  
                                    _TXSTAbits 000FAC                     _EUSART_DefaultErrorHandler 000000  
                                 _EUSART_Write 7F1E                         ?_OSCILLATOR_Initialize 0007  
                          start_initialization 7EF0                __size_of_PIN_MANAGER_Initialize 0030  
                                ??_EUSART_Read 0007                 ?_EUSART_SetOverrunErrorHandler 0007  
                   _EUSART_FramingErrorHandler 0005                         _EUSART_SetErrorHandler 7EC8  
                                  __pbssCOMRAM 000A                     __size_of_EUSART_Initialize 003E  
                          __end_of_EUSART_Read 7F5C                         _PIN_MANAGER_Initialize 7F5C  
       EUSART_SetErrorHandler@interruptHandler 0007                              _eusartRxLastError 000A  
                                     _PIR1bits 000F9E                ??_EUSART_SetFramingErrorHandler 0009  
            _EUSART_DefaultOverrunErrorHandler 000000                                    _EUSART_Read 7F34  
                                  _INTCON2bits 000FF1                                       __Hrparam 0000  
                                     __Lrparam 0000                        ??_OSCILLATOR_Initialize 0007  
                          _EUSART_ErrorHandler 0001                                       __ptext10 7F34  
                  __size_of_EUSART_is_rx_ready 0014                                  __size_of_main 0036  
                      ?_EUSART_SetErrorHandler 0007  EUSART_SetOverrunErrorHandler@interruptHandler 0007  
        __end_of_EUSART_SetFramingErrorHandler 7EDC         __size_of_EUSART_SetFramingErrorHandler 000A  
                _EUSART_SetFramingErrorHandler 7ED2                                     _INTCONbits 000FF2  
                      ?_PIN_MANAGER_Initialize 0007                 __end_of_EUSART_SetErrorHandler 7ED2  
EUSART_SetFramingErrorHandler@interruptHandler 0007                             EUSART_Write@txData 0007  
               __end_of_PIN_MANAGER_Initialize 7F8C  
