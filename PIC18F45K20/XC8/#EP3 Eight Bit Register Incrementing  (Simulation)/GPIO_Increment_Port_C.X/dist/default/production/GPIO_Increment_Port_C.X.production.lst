

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Jul 29 15:42:56 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 06/04/2022 GMT
    18                           ; 
    19                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K20 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     _TRISD	set	3989
    52   000000                     _TRISC	set	3988
    53   000000                     _TRISB	set	3987
    54   000000                     _LATC	set	3979
    55   000000                     _LATB	set	3978
    56   000000                     _WPUB	set	3964
    57   000000                     _ANSEL	set	3966
    58   000000                     _LATA	set	3977
    59   000000                     _LATD	set	3980
    60   000000                     _LATE	set	3981
    61   000000                     _OSCTUNE	set	3995
    62   000000                     _OSCCON	set	4051
    63   000000                     _INTCON2bits	set	4081
    64   000000                     _TRISA	set	3986
    65   000000                     _TRISE	set	3990
    66   000000                     _ANSELH	set	3967
    67   000000                     _INTCONbits	set	4082
    68                           
    69                           ; #config settings
    70                           
    71                           	psect	cinit
    72   007F8C                     __pcinit:
    73                           	callstack 0
    74   007F8C                     start_initialization:
    75                           	callstack 0
    76   007F8C                     __initialization:
    77                           	callstack 0
    78                           
    79                           ; Clear objects allocated to COMRAM (1 bytes)
    80   007F8C  6A03               	clrf	__pbssCOMRAM& (0+255),c
    81   007F8E                     end_of_initialization:
    82                           	callstack 0
    83   007F8E                     __end_of__initialization:
    84                           	callstack 0
    85   007F8E  0100               	movlb	0
    86   007F90  EFD4  F03F         	goto	_main	;jump to C main() function
    87                           
    88                           	psect	bssCOMRAM
    89   000003                     __pbssCOMRAM:
    90                           	callstack 0
    91   000003                     _A:
    92                           	callstack 0
    93   000003                     	ds	1
    94                           
    95                           	psect	cstackCOMRAM
    96   000001                     __pcstackCOMRAM:
    97                           	callstack 0
    98   000001                     ??_main:
    99                           
   100                           ; 1 bytes @ 0x0
   101   000001                     	ds	2
   102                           
   103 ;;
   104 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   105 ;;
   106 ;; *************** function _main *****************
   107 ;; Defined at:
   108 ;;		line 16 in file "main.c"
   109 ;; Parameters:    Size  Location     Type
   110 ;;		None
   111 ;; Auto vars:     Size  Location     Type
   112 ;;		None
   113 ;; Return value:  Size  Location     Type
   114 ;;                  1    wreg      void 
   115 ;; Registers used:
   116 ;;		wreg, status,2, status,0, cstack
   117 ;; Tracked objects:
   118 ;;		On entry : 0/0
   119 ;;		On exit  : 0/0
   120 ;;		Unchanged: 0/0
   121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   122 ;;      Params:         0       0       0       0       0       0       0
   123 ;;      Locals:         0       0       0       0       0       0       0
   124 ;;      Temps:          2       0       0       0       0       0       0
   125 ;;      Totals:         2       0       0       0       0       0       0
   126 ;;Total ram usage:        2 bytes
   127 ;; Hardware stack levels required when called: 2
   128 ;; This function calls:
   129 ;;		_SYSTEM_Initialize
   130 ;; This function is called by:
   131 ;;		Startup code after reset
   132 ;; This function uses a non-reentrant model
   133 ;;
   134                           
   135                           	psect	text0
   136   007FA8                     __ptext0:
   137                           	callstack 0
   138   007FA8                     _main:
   139                           	callstack 29
   140   007FA8                     
   141                           ;main.c: 18: SYSTEM_Initialize();
   142   007FA8  ECCF  F03F         	call	_SYSTEM_Initialize	;wreg free
   143   007FAC                     
   144                           ;main.c: 19: LATC=A;
   145   007FAC  0E00               	movlw	0
   146   007FAE  6E8B               	movwf	139,c	;volatile
   147   007FB0                     l836:
   148                           
   149                           ;main.c: 21: {;main.c: 22: _delay((unsigned long)((100)*(20000000/4000.0)));
   150   007FB0  0E03               	movlw	3
   151   007FB2  6E02               	movwf	(??_main+1)^0,c
   152   007FB4  0E8A               	movlw	138
   153   007FB6  6E01               	movwf	??_main^0,c
   154   007FB8  0E56               	movlw	86
   155   007FBA                     u17:
   156   007FBA  2EE8               	decfsz	wreg,f,c
   157   007FBC  D7FE               	bra	u17
   158   007FBE  2E01               	decfsz	??_main^0,f,c
   159   007FC0  D7FC               	bra	u17
   160   007FC2  2E02               	decfsz	(??_main+1)^0,f,c
   161   007FC4  D7FA               	bra	u17
   162   007FC6                     
   163                           ;main.c: 30: LATC++;
   164   007FC6  2A8B               	incf	139,f,c	;volatile
   165   007FC8  EFD8  F03F         	goto	l836
   166   007FCC  EF00  F000         	goto	start
   167   007FD0                     __end_of_main:
   168                           	callstack 0
   169                           
   170 ;; *************** function _SYSTEM_Initialize *****************
   171 ;; Defined at:
   172 ;;		line 50 in file "mcc_generated_files/mcc.c"
   173 ;; Parameters:    Size  Location     Type
   174 ;;		None
   175 ;; Auto vars:     Size  Location     Type
   176 ;;		None
   177 ;; Return value:  Size  Location     Type
   178 ;;                  1    wreg      void 
   179 ;; Registers used:
   180 ;;		wreg, status,2, cstack
   181 ;; Tracked objects:
   182 ;;		On entry : 0/0
   183 ;;		On exit  : 0/0
   184 ;;		Unchanged: 0/0
   185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   186 ;;      Params:         0       0       0       0       0       0       0
   187 ;;      Locals:         0       0       0       0       0       0       0
   188 ;;      Temps:          0       0       0       0       0       0       0
   189 ;;      Totals:         0       0       0       0       0       0       0
   190 ;;Total ram usage:        0 bytes
   191 ;; Hardware stack levels used: 1
   192 ;; Hardware stack levels required when called: 1
   193 ;; This function calls:
   194 ;;		_OSCILLATOR_Initialize
   195 ;;		_PIN_MANAGER_Initialize
   196 ;; This function is called by:
   197 ;;		_main
   198 ;; This function uses a non-reentrant model
   199 ;;
   200                           
   201                           	psect	text1
   202   007F9E                     __ptext1:
   203                           	callstack 0
   204   007F9E                     _SYSTEM_Initialize:
   205                           	callstack 29
   206   007F9E                     
   207                           ;mcc.c: 53: PIN_MANAGER_Initialize();
   208   007F9E  ECE8  F03F         	call	_PIN_MANAGER_Initialize	;wreg free
   209                           
   210                           ;mcc.c: 54: OSCILLATOR_Initialize();
   211   007FA2  ECCA  F03F         	call	_OSCILLATOR_Initialize	;wreg free
   212   007FA6  0012               	return		;funcret
   213   007FA8                     __end_of_SYSTEM_Initialize:
   214                           	callstack 0
   215                           
   216 ;; *************** function _PIN_MANAGER_Initialize *****************
   217 ;; Defined at:
   218 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;		None
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, status,2
   227 ;; Tracked objects:
   228 ;;		On entry : 0/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   232 ;;      Params:         0       0       0       0       0       0       0
   233 ;;      Locals:         0       0       0       0       0       0       0
   234 ;;      Temps:          0       0       0       0       0       0       0
   235 ;;      Totals:         0       0       0       0       0       0       0
   236 ;;Total ram usage:        0 bytes
   237 ;; Hardware stack levels used: 1
   238 ;; This function calls:
   239 ;;		Nothing
   240 ;; This function is called by:
   241 ;;		_SYSTEM_Initialize
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           	psect	text2
   246   007FD0                     __ptext2:
   247                           	callstack 0
   248   007FD0                     _PIN_MANAGER_Initialize:
   249                           	callstack 29
   250   007FD0                     
   251                           ;pin_manager.c: 60: LATE = 0x00;
   252   007FD0  0E00               	movlw	0
   253   007FD2  6E8D               	movwf	141,c	;volatile
   254                           
   255                           ;pin_manager.c: 61: LATD = 0x00;
   256   007FD4  0E00               	movlw	0
   257   007FD6  6E8C               	movwf	140,c	;volatile
   258                           
   259                           ;pin_manager.c: 62: LATA = 0x00;
   260   007FD8  0E00               	movlw	0
   261   007FDA  6E89               	movwf	137,c	;volatile
   262                           
   263                           ;pin_manager.c: 63: LATB = 0x00;
   264   007FDC  0E00               	movlw	0
   265   007FDE  6E8A               	movwf	138,c	;volatile
   266                           
   267                           ;pin_manager.c: 64: LATC = 0x00;
   268   007FE0  0E00               	movlw	0
   269   007FE2  6E8B               	movwf	139,c	;volatile
   270                           
   271                           ;pin_manager.c: 69: TRISE = 0x07;
   272   007FE4  0E07               	movlw	7
   273   007FE6  6E96               	movwf	150,c	;volatile
   274   007FE8                     
   275                           ;pin_manager.c: 70: TRISA = 0xFF;
   276   007FE8  6892               	setf	146,c	;volatile
   277   007FEA                     
   278                           ;pin_manager.c: 71: TRISB = 0xFF;
   279   007FEA  6893               	setf	147,c	;volatile
   280                           
   281                           ;pin_manager.c: 72: TRISC = 0x00;
   282   007FEC  0E00               	movlw	0
   283   007FEE  6E94               	movwf	148,c	;volatile
   284   007FF0                     
   285                           ;pin_manager.c: 73: TRISD = 0xFF;
   286   007FF0  6895               	setf	149,c	;volatile
   287   007FF2                     
   288                           ;pin_manager.c: 78: ANSEL = 0xFF;
   289   007FF2  687E               	setf	126,c	;volatile
   290                           
   291                           ;pin_manager.c: 79: ANSELH = 0x1F;
   292   007FF4  0E1F               	movlw	31
   293   007FF6  6E7F               	movwf	127,c	;volatile
   294                           
   295                           ;pin_manager.c: 84: WPUB = 0x00;
   296   007FF8  0E00               	movlw	0
   297   007FFA  6E7C               	movwf	124,c	;volatile
   298   007FFC                     
   299                           ;pin_manager.c: 85: INTCON2bits.nRBPU = 1;
   300   007FFC  8EF1               	bsf	241,7,c	;volatile
   301   007FFE  0012               	return		;funcret
   302   008000                     __end_of_PIN_MANAGER_Initialize:
   303                           	callstack 0
   304                           
   305 ;; *************** function _OSCILLATOR_Initialize *****************
   306 ;; Defined at:
   307 ;;		line 57 in file "mcc_generated_files/mcc.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;		None
   312 ;; Return value:  Size  Location     Type
   313 ;;                  1    wreg      void 
   314 ;; Registers used:
   315 ;;		wreg, status,2
   316 ;; Tracked objects:
   317 ;;		On entry : 0/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   321 ;;      Params:         0       0       0       0       0       0       0
   322 ;;      Locals:         0       0       0       0       0       0       0
   323 ;;      Temps:          0       0       0       0       0       0       0
   324 ;;      Totals:         0       0       0       0       0       0       0
   325 ;;Total ram usage:        0 bytes
   326 ;; Hardware stack levels used: 1
   327 ;; This function calls:
   328 ;;		Nothing
   329 ;; This function is called by:
   330 ;;		_SYSTEM_Initialize
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text3
   335   007F94                     __ptext3:
   336                           	callstack 0
   337   007F94                     _OSCILLATOR_Initialize:
   338                           	callstack 29
   339   007F94                     
   340                           ;mcc.c: 60: OSCCON = 0x60;
   341   007F94  0E60               	movlw	96
   342   007F96  6ED3               	movwf	211,c	;volatile
   343                           
   344                           ;mcc.c: 62: OSCTUNE = 0x00;
   345   007F98  0E00               	movlw	0
   346   007F9A  6E9B               	movwf	155,c	;volatile
   347   007F9C  0012               	return		;funcret
   348   007F9E                     __end_of_OSCILLATOR_Initialize:
   349                           	callstack 0
   350   000000                     
   351                           	psect	rparam
   352   000000                     
   353                           	psect	idloc
   354                           
   355                           ;Config register IDLOC0 @ 0x200000
   356                           ;	unspecified, using default values
   357   200000                     	org	2097152
   358   200000  FF                 	db	255
   359                           
   360                           ;Config register IDLOC1 @ 0x200001
   361                           ;	unspecified, using default values
   362   200001                     	org	2097153
   363   200001  FF                 	db	255
   364                           
   365                           ;Config register IDLOC2 @ 0x200002
   366                           ;	unspecified, using default values
   367   200002                     	org	2097154
   368   200002  FF                 	db	255
   369                           
   370                           ;Config register IDLOC3 @ 0x200003
   371                           ;	unspecified, using default values
   372   200003                     	org	2097155
   373   200003  FF                 	db	255
   374                           
   375                           ;Config register IDLOC4 @ 0x200004
   376                           ;	unspecified, using default values
   377   200004                     	org	2097156
   378   200004  FF                 	db	255
   379                           
   380                           ;Config register IDLOC5 @ 0x200005
   381                           ;	unspecified, using default values
   382   200005                     	org	2097157
   383   200005  FF                 	db	255
   384                           
   385                           ;Config register IDLOC6 @ 0x200006
   386                           ;	unspecified, using default values
   387   200006                     	org	2097158
   388   200006  FF                 	db	255
   389                           
   390                           ;Config register IDLOC7 @ 0x200007
   391                           ;	unspecified, using default values
   392   200007                     	org	2097159
   393   200007  FF                 	db	255
   394                           
   395                           	psect	config
   396                           
   397                           ; Padding undefined space
   398   300000                     	org	3145728
   399   300000  FF                 	db	255
   400                           
   401                           ;Config register CONFIG1H @ 0x300001
   402                           ;	Oscillator Selection bits
   403                           ;	FOSC = HS, HS oscillator
   404                           ;	Fail-Safe Clock Monitor Enable bit
   405                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   406                           ;	Internal/External Oscillator Switchover bit
   407                           ;	IESO = OFF, Oscillator Switchover mode disabled
   408   300001                     	org	3145729
   409   300001  02                 	db	2
   410                           
   411                           ;Config register CONFIG2L @ 0x300002
   412                           ;	Power-up Timer Enable bit
   413                           ;	PWRT = OFF, PWRT disabled
   414                           ;	Brown-out Reset Enable bits
   415                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   416                           ;	Brown Out Reset Voltage bits
   417                           ;	BORV = 18, VBOR set to 1.8 V nominal
   418   300002                     	org	3145730
   419   300002  1F                 	db	31
   420                           
   421                           ;Config register CONFIG2H @ 0x300003
   422                           ;	Watchdog Timer Enable bit
   423                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   424                           ;	Watchdog Timer Postscale Select bits
   425                           ;	WDTPS = 32768, 1:32768
   426   300003                     	org	3145731
   427   300003  1E                 	db	30
   428                           
   429                           ; Padding undefined space
   430   300004                     	org	3145732
   431   300004  FF                 	db	255
   432                           
   433                           ;Config register CONFIG3H @ 0x300005
   434                           ;	CCP2 MUX bit
   435                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   436                           ;	PORTB A/D Enable bit
   437                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   438                           ;	Low-Power Timer1 Oscillator Enable bit
   439                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   440                           ;	HFINTOSC Fast Start-up
   441                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   442                           ;	MCLR Pin Enable bit
   443                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   444   300005                     	org	3145733
   445   300005  8B                 	db	139
   446                           
   447                           ;Config register CONFIG4L @ 0x300006
   448                           ;	Stack Full/Underflow Reset Enable bit
   449                           ;	STVREN = ON, Stack full/underflow will cause Reset
   450                           ;	Single-Supply ICSP Enable bit
   451                           ;	LVP = OFF, Single-Supply ICSP disabled
   452                           ;	Extended Instruction Set Enable bit
   453                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   454                           ;	Background Debugger Enable bit
   455                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
   456   300006                     	org	3145734
   457   300006  81                 	db	129
   458                           
   459                           ; Padding undefined space
   460   300007                     	org	3145735
   461   300007  FF                 	db	255
   462                           
   463                           ;Config register CONFIG5L @ 0x300008
   464                           ;	Code Protection Block 0
   465                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   466                           ;	Code Protection Block 1
   467                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   468                           ;	Code Protection Block 2
   469                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   470                           ;	Code Protection Block 3
   471                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   472   300008                     	org	3145736
   473   300008  0F                 	db	15
   474                           
   475                           ;Config register CONFIG5H @ 0x300009
   476                           ;	Boot Block Code Protection bit
   477                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   478                           ;	Data EEPROM Code Protection bit
   479                           ;	CPD = OFF, Data EEPROM not code-protected
   480   300009                     	org	3145737
   481   300009  C0                 	db	192
   482                           
   483                           ;Config register CONFIG6L @ 0x30000A
   484                           ;	Write Protection Block 0
   485                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   486                           ;	Write Protection Block 1
   487                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   488                           ;	Write Protection Block 2
   489                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   490                           ;	Write Protection Block 3
   491                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   492   30000A                     	org	3145738
   493   30000A  0F                 	db	15
   494                           
   495                           ;Config register CONFIG6H @ 0x30000B
   496                           ;	Configuration Register Write Protection bit
   497                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   498                           ;	Boot Block Write Protection bit
   499                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   500                           ;	Data EEPROM Write Protection bit
   501                           ;	WRTD = OFF, Data EEPROM not write-protected
   502   30000B                     	org	3145739
   503   30000B  E0                 	db	224
   504                           
   505                           ;Config register CONFIG7L @ 0x30000C
   506                           ;	Table Read Protection Block 0
   507                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   508                           ;	Table Read Protection Block 1
   509                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   510                           ;	Table Read Protection Block 2
   511                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   512                           ;	Table Read Protection Block 3
   513                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   514   30000C                     	org	3145740
   515   30000C  0F                 	db	15
   516                           
   517                           ;Config register CONFIG7H @ 0x30000D
   518                           ;	Boot Block Table Read Protection bit
   519                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   520   30000D                     	org	3145741
   521   30000D  40                 	db	64
   522                           tosu	equ	0xFFF
   523                           tosh	equ	0xFFE
   524                           tosl	equ	0xFFD
   525                           stkptr	equ	0xFFC
   526                           pclatu	equ	0xFFB
   527                           pclath	equ	0xFFA
   528                           pcl	equ	0xFF9
   529                           tblptru	equ	0xFF8
   530                           tblptrh	equ	0xFF7
   531                           tblptrl	equ	0xFF6
   532                           tablat	equ	0xFF5
   533                           prodh	equ	0xFF4
   534                           prodl	equ	0xFF3
   535                           indf0	equ	0xFEF
   536                           postinc0	equ	0xFEE
   537                           postdec0	equ	0xFED
   538                           preinc0	equ	0xFEC
   539                           plusw0	equ	0xFEB
   540                           fsr0h	equ	0xFEA
   541                           fsr0l	equ	0xFE9
   542                           wreg	equ	0xFE8
   543                           indf1	equ	0xFE7
   544                           postinc1	equ	0xFE6
   545                           postdec1	equ	0xFE5
   546                           preinc1	equ	0xFE4
   547                           plusw1	equ	0xFE3
   548                           fsr1h	equ	0xFE2
   549                           fsr1l	equ	0xFE1
   550                           bsr	equ	0xFE0
   551                           indf2	equ	0xFDF
   552                           postinc2	equ	0xFDE
   553                           postdec2	equ	0xFDD
   554                           preinc2	equ	0xFDC
   555                           plusw2	equ	0xFDB
   556                           fsr2h	equ	0xFDA
   557                           fsr2l	equ	0xFD9
   558                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       3       1        3.2%
BITBIGSFRlh         37      0       0      18        0.0%
BITBIGSFRhl         1D      0       0      17        0.0%
BITBIGSFRllllll     1C      0       0      23        0.0%
BITBIGSFRhh          D      0       0      16        0.0%
BITBIGSFRllllh       9      0       0      21        0.0%
BITBIGSFRllhh        4      0       0      19        0.0%
BITBIGSFRllhll       4      0       0      20        0.0%
BITBIGSFRlllllh      1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       3      24        0.0%
DATA                 0      0       3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Jul 29 15:42:56 2023

                             _A 0003                              l11 7FA6                              l14 7F9C  
                            l47 7FFE                              u17 7FBA                             l820 7FF0  
                           l822 7FF2                             l814 7FD0                             l824 7FFC  
                           l816 7FE8                             l832 7FA8                             l826 7F94  
                           l818 7FEA                             l834 7FAC                             l828 7F9E  
                           l836 7FB0                             l838 7FC6                             wreg 0FE8  
                          _LATA 0F89                            _LATB 0F8A                            _LATC 0F8B  
                          _LATD 0F8C                            _LATE 0F8D                            _WPUB 0F7C  
                          _main 7FA8                            start 0000                    ___param_bank 0000  
 __end_of_OSCILLATOR_Initialize 7F9E                           ?_main 0001                           _ANSEL 0F7E  
                         _TRISA 0F92                           _TRISB 0F93                           _TRISC 0F94  
                         _TRISD 0F95                           _TRISE 0F96                 __initialization 7F8C  
                  __end_of_main 7FD0                          ??_main 0001                   __activetblptr 0000  
                        _ANSELH 0F7F                          _OSCCON 0FD3                          isa$std 0001  
             _SYSTEM_Initialize 7F9E                      __accesstop 0060         __end_of__initialization 7F8E  
            ?_SYSTEM_Initialize 0001                   ___rparam_used 0001                  __pcstackCOMRAM 0001  
           ??_SYSTEM_Initialize 0001       __end_of_SYSTEM_Initialize 7FA8                         _OSCTUNE 0F9B  
                       __Hparam 0000                         __Lparam 0000                         __pcinit 7F8C  
                       __ramtop 0600                         __ptext0 7FA8                         __ptext1 7F9E  
                       __ptext2 7FD0                         __ptext3 7F94           _OSCILLATOR_Initialize 7F94  
      ??_PIN_MANAGER_Initialize 0001            end_of_initialization 7F8E          ?_OSCILLATOR_Initialize 0001  
           start_initialization 7F8C                     __pbssCOMRAM 0003          _PIN_MANAGER_Initialize 7FD0  
                   _INTCON2bits 0FF1                        __Hrparam 0000                        __Lrparam 0000  
       ??_OSCILLATOR_Initialize 0001                        isa$xinst 0000                      _INTCONbits 0FF2  
       ?_PIN_MANAGER_Initialize 0001  __end_of_PIN_MANAGER_Initialize 8000  
